apply plugin: 'maven-publish'
apply plugin: 'signing'

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        it.create("main", MavenPublication) {MavenPublication publication ->
            from(components["java"])
            pom {
                name = 'macOS keychain helper library'
                description = 'A helper library to work with the macOS keychain.'
                url = 'https://github.com/wooga/macos-security.groovy'

                artifactId = project.name
                inceptionYear = "2021"

                scm {
                    connection = 'scm:git:https://github.com/wooga/macos-security.groovy.git'
                    developerConnection = 'scm:git:https://github.com/wooga/macos-security.groovy.git'
                    url = 'https://github.com/wooga/macos-security.groovy.git'
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'manfred.endres'
                        name = 'Manfred Endres'
                        email = 'manfred.endres@wooga.net'
                    }
                }
            }
        }
    }
}

signing {
    def signingKeyId = project.hasProperty("signingKeyId") ? project.property('signingKeyId') : System.getenv('OSSRH_SIGNING_KEY_ID')
    def signingKey = project.hasProperty("signingKey") ? project.property('signingKey') : System.getenv('OSSRH_SIGNING_KEY')
    def signingPassword = project.hasProperty('signingPassphrase') ? project.property('signingPassphrase') : System.getenv("OSSRH_SIGNING_PASSPHRASE")
    useInMemoryPgpKeys(signingKeyId.toString(), signingKey.toString(), signingPassword.toString())
    sign publishing.publications.main
}
